@model Telerik.Sitefinity.Frontend.Mvc.Models.ContentDetailsViewModel

@using System.Collections;
@using System.Linq;
@using Telerik.Sitefinity.Frontend.DynamicContent.WidgetTemplates.Fields.Helpers;
@using Telerik.Sitefinity;
@using Telerik.Sitefinity.Data.ContentLinks;
@using Telerik.Sitefinity.Frontend.Mvc.Helpers;
@using Telerik.Sitefinity.Libraries.Model;
@using Telerik.Sitefinity.Localization;
@using Telerik.Sitefinity.Model;
@using Telerik.Sitefinity.Model.ContentLinks;
@using Telerik.Sitefinity.Modules.Pages;
@using Telerik.Sitefinity.Pages.Model;

<div class="card">

    <div class="@Model.CssClass" @Html.InlineEditingAttributes(Model.ProviderName, Model.ContentType.FullName, (Guid)Model.Item.Fields.Id)>
        <h3 class="card-header bg-primary"  @Html.InlineEditingFieldAttributes("Title", "ShortText")>
            @Model.Item.Fields.Title
        </h3>

        @*Start Company field*@
        <div>
            <strong>Company: </strong>
            <span @Html.InlineEditingFieldAttributes("Company", "ShortText")>@Model.Item.Fields.Company</span>
        </div>
        @*End Company field*@

        @*Start Thumbnail field*@
        <ul>
            @foreach (var relatedItem in Model.Item.Fields.Thumbnail)
            {
                <li class="media">
                    <a href='@relatedItem.Fields.MediaUrl'>
                        <img src='@relatedItem.Fields.ThumbnailUrl' alt='@relatedItem.Fields.AlternativeText' title='@relatedItem.Fields.Title' />
                    </a>
                </li>
            }
        </ul>
        @*End Thumbnail field*@

        @*Start CompanyWebsite field*@
        <div>
            <strong> Company website :</strong>

            <a href="@Html.InlineEditingFieldAttributes("CompanyWebsite", "ShortText")">@Model.Item.Fields.CompanyWebsite</a>
        </div>
        @*End CompanyWebsite field*@
        <br />
        @*Start Industry field*@

        <div>
            <strong>Industry :</strong>
            @if (Model.Item.Fields.Industry != null)
            {
                <span @Html.InlineEditingFieldAttributes("Industry", "ChoicesRadioButtons")>
                    @Model.Item.GetChoiceLabel("Industry", @Model.ContentType)
                </span>
            }
        </div>
        @*End Industry field*@
        <br />
        @*Start Description field*@
        <div class="sf-Long-text" @Html.InlineEditingFieldAttributes("Description", "LongText")>@Html.HtmlSanitize((string)Model.Item.Fields.Description)</div>
        @*End Description field*@

        <br />
        @*Start ProductsUsed field*@
        <div>
            <strong>Products Used: </strong>
            <span class="sf-Long-text" @Html.InlineEditingFieldAttributes("ProductsUsed", "LongText")>@Html.HtmlSanitize((string)Model.Item.Fields.ProductsUsed)</span>
        </div>
        @*End ProductsUsed field*@

    </div>
</div>